app MkaeLoop {
  wasp: {
    version: "^0.13.0"
  },
  title: "MkaeLoop",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int         @id @default(autoincrement())
    firstName        String?
    lastName        String?
    challenges  Challenge[]
psl=}

entity Challenge {=psl
    id          Int    @id @default(autoincrement())
    projectType String
    timeframe   String
    isActive    Boolean
    challengeName String
    user        User?  @relation(fields: [userId], references: [id])
    userId      Int?
    userName    String?
psl=}

action createChallenge {
  fn: import { createChallenge } from "@src/actions.js",
  entities: [Challenge, User]
}

query getChallenges {
  fn: import { getChallenges } from "@src/queries.js",
  entities: [Challenge]
}

query getUser {
  fn: import { getUser } from "@src/queries.js",
  entities: [User]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}