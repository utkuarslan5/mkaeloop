app MkaeLoop {
  wasp: {
    version: "^0.13.0"
  },
  title: "MkaeLoop",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}
entity User {=psl
    id              Int     @id @default(autoincrement())
    firstName       String?
    lastName        String?
    loops           Loop[]
    subscribedLoops Loop[]  @relation("SubscribedLoop")
psl=}

entity Loop {=psl
    id          Int    @id @default(autoincrement())
    projectType String
    startDate   DateTime
    numIterations Int
    frequency   String
    isActive    Boolean
    name        String?
    subscribers User[] @relation("SubscribedLoop")
    userId      Int
    createdBy   User  @relation(fields: [userId], references: [id])
psl=}


action createLoop {
  fn: import { createLoop } from "@src/actions.js",
  entities: [Loop, User]
}

query getLoops {
  fn: import { getLoops } from "@src/queries.js",
  entities: [Loop]
}

query getUser {
  fn: import { getUser } from "@src/queries.js",
  entities: [User]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}